name: CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - '*-alpha.*'
      - '*-beta.*'
      - '*-rc.*'
      - '*-preview.*'
      - '*[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  NUGET_PACKAGE_NAME: 'Typst.Net'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install Typst
      run: |
        curl -fsSL https://raw.githubusercontent.com/typst/typst/main/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage;Format=opencover"

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.2.0
      with:
        args: >
          -Dsonar.organization=msnts
          -Dsonar.projectKey=msnts_typst.net
          -Dsonar.projectName=Typst.Net
          -Dsonar.sources=src/
          -Dsonar.tests=tests/
          -Dsonar.cs.opencover.reportPaths=**/TestResults/*/coverage.opencover.xml
          -Dsonar.verbose=false
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Calculate version
      id: nuget_version
      run: |
        TAG_NAME="${GITHUB_REF#refs/tags/}"
        echo "TAG_NAME=$TAG_NAME" >> "$GITHUB_OUTPUT"
        echo "NUGET_VERSION=$TAG_NAME" >> "$GITHUB_OUTPUT"

    - name: Pack
      run: dotnet pack ./src/Typst.Net.Core/Typst.Net.Core.csproj --no-build --configuration Release -p:PackageVersion="${{ steps.nuget_version.outputs.NUGET_VERSION }}"

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: '**/*.nupkg'
    
  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: nuget-package

    - name: Unzip 
      run: tar -xvf nuget-package.zip

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish to NuGet
      run: dotnet nuget push "*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ env.NUGET_API_KEY }} --skip-duplicate
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          **/*.nupkg
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 